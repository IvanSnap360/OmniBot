# The MIT License
#
# Copyright (c) 2019 Giovanni di Dio Bruno https://gbr1.github.io
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
#
footprint: [[-0.25, 0.25], [0.25, 0.25], [0.25, -0.25], [-0.25, -0.25]]
# robot_radius: 0.10

transform_tolerance: 0.5
update_frequency: 5.0
publish_frequency: 5.0

#must match incoming static map
global_frame: map
robot_base_frame: base_footprint
resolution: 0.01

rolling_window: false
track_unknown_space: true

plugins:
    - { name: static, type: "costmap_2d::StaticLayer" }
    - { name: polygon_layer, type: "polygon_layer::PolygonLayer" }
    #Can disable sensor layer if gmapping is fast enough to update scans
    - { name: sensor, type: "costmap_2d::ObstacleLayer" }
    - { name: inflation, type: "costmap_2d::InflationLayer" }

static:
    #Can pull data from gmapping, map_server or a non-rolling costmap
    map_topic: /rtabmap/grid_map
    # map_topic: move_base/global_costmap/costmap
    subscribe_to_updates: true

polygon_layer:
    resize_to_polygon: true

sensor:
    observation_sources: point_cloud_sensor

    point_cloud_sensor:
        {
            sensor_frame: d400_link,
            data_type: PointCloud2,
            topic: /d400/depth/color/points,
            marking: true,
            clearing: true
        }
inflation:
    inflation_radius: 0.15
